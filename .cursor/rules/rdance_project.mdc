---
description: RDance Project Rules
globs:
alwaysApply: true
---

Данный файл описывает проект и содержит всю необходимую для разработки информацию о проекте.
Данный файл является источником истины о проекте. При наличии расхождений между этим файлом и проектом, для принятия решений используется информация в этом файле.
Анализировать код для понимания состояния проекта нельзя. Вся необходимая информация о проекте, для решения поставленной задачи указана в этом файле начиная с раздела "Контекст проекта". Если после заголовка раздела "Контекст проекта" ничего нет - значит проект новый и не содержит файлов.
При разработке проекта обязательно выполнять все пункты из раздела "Правила и указания".

# Правила и указания

- Проверять код на наличие ошибок не нужно. Запускать установку модулей не нужно.
- Перед тем как решать задачу, тебе нужна информация о проекте. Требуемая информация указана в этом файле начиная с раздела "Контекст проекта". Если раздел пустой, значит проект новый и не содержит файлов.
- После решения задачи, отредактируй этот файл начиная с раздела "Контекст проекта" так, чтобы он содержал всю необходимую информацию для тебя, чтобы ты мог без текушего контекста решать следующие задачи без анализа файлов проекта, основываясь только на информации в разделе "Контекст проекта". Информацию нужно записать в текстовом виде удобном для тебя, а не для человека. Если некоторая содержащаяся в этом разделе информация неактуальна - ее следует удалить.
- Выполняя задачу, важно делать только то, что указано в задаче. Если есть предположения о том, что можно сделать помимо описанных требований, необходимо спросить - нужно ли это делать перед тем как делать.
- Если поставленная задача содержит слова, термины, формулировки, которые можно понять двояко, необходимо уточнить, что конкретно имеется ввиду.
- Если поставленную задачу можно сделать разными способами, с одинаковым качеством, необходимо задать уточняюшщие вопросы и, основываясь на ответах, выбрать наилучший.


# Контекст проекта

## ВАЖНО: Обновлять этот файл при каждом промпте!

## ВАЖНО: Не запускать npm start без отдельного указания, не запускать другой сервер для проверки, без отдельного указания

---

## Общая информация о проекте

**Название:** RDance - Dance Simulator  
**Тип:** Интерактивный симулятор танца с управляемым скелетом  
**Технологии:** p5.js (локальная версия, автономный проект)  
**Цель:** Создание танцевального симулятора с управлением скелетом танцора

## Структура проекта

```
RDance/
├── index.html          # Основная HTML страница
├── style.css           # Стили и адаптивный дизайн
├── sketch.js           # Основная логика p5.js (1672 строки)
├── p5.min.js           # Библиотека p5.js (локальная копия)
├── package.json        # Node.js конфигурация
├── README.md           # Документация проекта
├── task.md             # Исходное техническое задание
├── assets/images/      # Изображения для фотореалистичного режима
│   ├── dancer_body.png
│   ├── dancer_dress.png
│   ├── dress.png
│   └── face.png
└── .cursor/rules/      # Правила для AI (этот файл)
```

## Ключевые компоненты системы

### 1. Класс Skeleton
- **Расположение:** `sketch.js`, строки 25-1274
- **Назначение:** Управление состоянием и отрисовкой скелета танцора
- **Ключевые методы:**
  - `calculateJointPositions()` - вычисление позиций всех суставов (строки 75-154)
  - `draw()` - отрисовка скелета с выбором режима (строки 157-174)
  - `reset()` - сброс к начальному состоянию (строки 1248-1273)
  - `calculatePelvisPositionForFloorContact()` - расчет позиции таза для касания пола (строки 1219-1245)
  - `toRadians(degrees)` - конвертация градусов в радианы (строки 70-72)

### 2. Система режимов отрисовки
- **SKELETON (0)** - Простой скелет (строки 177-223)
- **SIMPLE (1)** - Простая девушка (строки 226-414)
- **DETAILED (2)** - Детализированная девушка (строки 417-764)
- **PHOTOREALISTIC (3)** - Фотореалистичная с изображениями (строки 767-1216)
- **Текущий режим:** SKELETON (строка 22: `const CURRENT_RENDER_MODE = RENDER_MODE.SKELETON;`)

### 3. Система углов и координат
- **Все углы хранятся в градусах** в состоянии скелета
- **При расчетах конвертируются в радианы** через `toRadians()`
- **Тригонометрические функции p5.js** работают с радианами

### 4. Структура скелета
**Опорные точки (суставы):**
- Ступни (левая и правая)
- Колени (левое и правое)
- Таз (центральная точка)
- Основание шеи
- Плечи (левое и правое)
- Локти (левый и правый)
- Кисти (левая и правая)
- Голова

**Кости (длины в пикселях):**
- Бедра: 80px (таз → колено)
- Голени: 70px (колено → ступня)
- Позвоночник: 100px (таз → шея)
- Плечи: 40px (шея → плечо)
- Плечевые кости: 60px (плечо → локоть)
- Предплечья: 50px (локоть → кисть)
- Шея: 30px (шея → голова)

## Текущее состояние скелета (начальная позиция)

```javascript
this.state = {
    // Позиция таза (центральная точка скелета)
    pelvisX: CANVAS_WIDTH / 2,
    pelvisY: FLOOR_Y - расчетная_высота_для_касания_пола,
    
    // Угол наклона туловища (позвоночника) - вертикально
    spineAngle: -90, // -90° означает вертикально вниз
    
    // Углы костей относительно туловища
    // Ноги: слегка в стороны для естественной позы
    leftThighAngle: 160,    // левое бедро вниз и слегка влево
    rightThighAngle: 200,   // правое бедро вниз и слегка вправо
    leftShinAngle: 0,       // левая голень продолжает линию бедра
    rightShinAngle: 0,      // правая голень продолжает линию бедра
    
    // Плечи: горизонтально
    leftShoulderAngle: 90,   // левое плечо влево (90°)
    rightShoulderAngle: -90, // правое плечо вправо (-90°)
    
    // Руки: вниз и слегка в стороны
    leftUpperArmAngle: 90,   // левая рука вниз
    rightUpperArmAngle: -90, // правая рука вниз
    leftForearmAngle: 0,     // левое предплечье продолжает руку
    rightForearmAngle: 0,    // правое предплечье продолжает руку
    
    // Шея: поворот относительно туловища
    neckAngle: 0             // шея прямо (0° относительно позвоночника)
};
```

## Система координат и углов

### Важные принципы:
1. **Все углы в градусах** в состоянии, конвертируются в радианы при расчетах
2. **Поворот туловища влияет на все части тела** (включая ноги)
3. **Углы костей суммируются** с углом туловища при расчете позиций
4. **Пол находится на 90% высоты экрана** (FLOOR_Y = CANVAS_HEIGHT * 0.9)

### Расчет позиций:
- **Колени:** `pelvis + (thighAngle + spineAngle)`
- **Ступни:** `knee + (shinAngle + thighAngle + spineAngle)`
- **Плечи:** `spineEnd + (shoulderAngle + spineAngle)`
- **Локти:** `shoulder + (upperArmAngle + shoulderAngle + spineAngle)`
- **Кисти:** `elbow + (forearmAngle + upperArmAngle + shoulderAngle + spineAngle)`
- **Голова:** `spineEnd + (neckAngle + spineAngle)` - поворот шеи относительно туловища

## Управление

### Клавиатура (строки 1449-1571):
- **Q** - сброс к начальному состоянию
- **W** - переключение режима отладки
- **C/V** - правая голень наружу/внутрь
- **N/M** - левая голень внутрь/наружу
- **D/F** - правое бедро наружу/внутрь
- **J/K** - левое бедро внутрь/наружу
- **G/H** - туловище наклон вправо/влево
- **[ / ]** - поворот шеи влево/вправо относительно туловища
- **E/R** - правое плечо вниз/вверх
- **U/I** - левое плечо вверх/вниз
- **Enter** - полноэкранный режим
- **Esc** - выход из полноэкранного режима

### Кнопки интерфейса:
- **Сброс** - возврат к начальной позе
- **Пауза** - остановка/возобновление анимации
- **Полный экран** - переключение полноэкранного режима

## Технические детали

### Canvas:
- **Размер:** 800x600 пикселей
- **Режим цвета:** HSB
- **Фон:** темный градиент (20, 20, 40)
- **Пол:** белая линия на 90% высоты

### Полноэкранный режим (строки 1574-1672):
- **Поддержка всех браузеров** (включая старые версии)
- **Автоматическое изменение размера canvas**
- **Перемещение sketch-container в body**
- **Скрытие интерфейса в полноэкранном режиме**

### Система изображений (строки 1280-1317):
- **Загрузка внешних изображений** через `preload()`
- **Fallback система** - создание изображений программно
- **Изображения:** `dancer_body.png`, `dress.png`

## Режимы отрисовки (детальное описание)

### SKELETON (0) - Простой скелет:
- **Белые линии** для костей
- **Черные круги** для суставов
- **Минималистичный дизайн**

### SIMPLE (1) - Простая девушка:
- **Платье:** Темно-розовое с вырезом, длина до колен
- **Тело:** Телесный цвет (255, 220, 180)
- **Волосы:** Темно-коричневые с челкой и прядями
- **Лицо:** Карие глаза, брови, нос, улыбка

### DETAILED (2) - Детализированная девушка:
- **Платье:** Белое А-силуэт с V-образным вырезом
- **Платье закрывает 70% длины бедра**
- **Правильные пропорции рук относительно головы**
- **Ноги с неравномерной шириной (трапеция)**
- **Белые кеды с деталями (шнурки, люверсы)**
- **Волосы начинаются выше глаз**
- **Правильное расположение черт лица**
- **Складки на платье и тени**

### PHOTOREALISTIC (3) - Фотореалистичная:
- **Использует внешние изображения** из папки assets/images/
- **Платье чуть выше колена** с поворотом
- **Фотореалистичные детали** - объемные глаза, ресницы, тени
- **Fallback к простой отрисовке** если изображения не загружены

## Отладочная система

### Режим отладки (строки 1372-1446):
- **Включение:** клавиша W
- **Отображение всех параметров** состояния скелета (включая neckAngle)
- **Округление значений** до целых чисел
- **Позиция:** левый верхний угол экрана

## Node.js интеграция

### package.json:
- **npm start** - запуск HTTP сервера на порту 2025
- **http-server** - простой статический сервер
- **Автономность** - все зависимости локальные

## Последние изменения

### Текущая версия (актуальная):
- ✅ **1672+ строк кода** в sketch.js
- ✅ **4 режима отрисовки** с переключением через константу
- ✅ **Полная система управления** клавиатурой (включая поворот шеи)
- ✅ **Отладочный режим** с отображением состояния (включая neckAngle)
- ✅ **Полноэкранный режим** с поддержкой всех браузеров
- ✅ **Система изображений** с fallback
- ✅ **Детализированная отрисовка** с правильными пропорциями
- ✅ **Поворот шеи** клавишами [ и ] относительно туловища

### История изменений:
1. **Переименование проекта** из Smoke Particles в RDance
2. **Создание системы скелета** с опорными точками и костями
3. **Реализация системы состояния** с координатами и углами
4. **Исправление тригонометрических функций** (градусы/радианы)
5. **Исправление поворота тела** (все части поворачиваются вместе)
6. **Исправление направления ног** (идут вниз к полу)
7. **Добавление множественных режимов отрисовки**
8. **Реализация фотореалистичного режима**
9. **Создание отладочной системы**
10. **Улучшение системы управления**
11. **Добавление поворота шеи** клавишами [ и ] относительно туловища

## Важные замечания для разработки

1. **Всегда обновлять этот файл** после изменений в проекте
2. **Углы в градусах** в состоянии, **радианы** в расчетах
3. **Поворот туловища влияет на все части тела**
4. **Ступни должны касаться пола** (автоматический расчет позиции таза)
5. **Проект автономный** - все библиотеки локальные
6. **Полноэкранный режим работает** корректно
7. **Система управления расширена** - множество клавиш для точного контроля
8. **Текущий режим отрисовки:** SKELETON (строка 22)

## Планы развития

- 🎵 Синхронизация с музыкой
- 💃 Предустановленные танцевальные движения
- 🎨 Улучшенная визуализация (мышцы, одежда)
- 🤝 Мультиплеер для танцевальных батлов
- 📱 Поддержка сенсорного управления

---

**Последнее обновление:** Добавление поворота шеи клавишами [ и ], обновление контекста проекта
**Статус:** Полнофункциональный танцевальный симулятор с 4 режимами отрисовки, расширенным управлением и поворотом шеи
